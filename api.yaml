openapi: 3.0.0
info:
  title: BE Mini Project 4 (Movie Ticket Booking)
  version: 1.0.0
servers:
  - url: http://{{base_url}}
    variables:
      base_url:
        default: localhost:5000
        description: local
tags:
  - name: Auth
  - name: Movies
  - name: Orders
  - name: Screening
paths:
  /:
    get:
      tags:
        - default
      summary: Ping
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ping"
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: 
                - username
                - password
                - fullname
                - role
              properties:
                username:
                  type: string
                password:
                  type: string
                fullname:
                  type: string
                role:
                  type: string
                  enum: 
                    - user
                    - admin
              example:
                username: user3
                password: "12345"
                fullname: user3
                role: user
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  status: 201
                  message: "User registered successfully"
                  data:
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmdWxsbmFtZSI6InVzZXIzIiwidXNlcm5hbWUiOiJ1c2VyMyIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzEzNDI1NjEwLCJleHAiOjE3MTM1MTIwMTB9.ai3pyFA4OEqgtSRYvk4i4RdAt__Rni8dCt5s4GeT9nA
        "409":
          description: Failed response
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  status: 409
                  message: "Username already registered"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: user1
                password: "12345"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /movies/:
    get:
      tags:
        - Movies
      summary: Get All
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Movies
      summary: Create Movie
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                duration: 120
                rating: PG
                synopsis: SINOPSSISSSSS
                title: Movies 12
                director:
                  - director 1
                cast:
                  - actor: actor 1
                    as_character: Character 1
                  - actor: actor 2
                    as_character: Character 2
                genre:
                  - Comedy
                  - Romance
                  - Horror
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /movies/1:
    get:
      tags:
        - Movies
      summary: Get By Id
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /movies/15:
    put:
      tags:
        - Movies
      summary: Update Movie
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 15
                duration: 75
                rating: G
                synopsis: SINOPSSISSSSS
                title: Movies 12
                director:
                  - director 1
                cast:
                  - actor: actor 1
                    as_character: Character 1
                  - actor: actor 2
                    as_character: Character 2
                genre:
                  - Comedy
                  - Romance
                  - Horror
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Movies
      summary: Delete
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /orders:
    post:
      tags:
        - Orders
      summary: Order Ticket
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                movie_id: 1
                show_time: "2024-05-13 03:00:00"
                seat_id:
                  - 1
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /orders/history:
    get:
      tags:
        - Orders
      summary: Order History
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /screening:
    post:
      tags:
        - Screening
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                movie_id: 1
                show_time: "2024-05-13 03:00:00"
                seat_id:
                  - 1
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

components:
  schemas:
    Ping:
      properties:
        success:
          type: boolean
        status:
          type: number
        message:
          type: string
      example:
        success: true
        status: 200
        message: "Ticket Reservation API"

    Error:
      properties:
        success:
          type: boolean
        status:
          type: boolean
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
